@mixin playGod($orbitSize, $order, $color, $planetSize) {
  $planetSize: $planetSize * 3;
  $opacity: 0.55 - ($order/100%)*2;

  /* â€¦and God said, let there be orbits and planets. Yea, verily! */
  width: $orbitSize;
  height: $orbitSize;
  position: absolute;
  left: $order + 26%;
  top: ($order * 3) + 48%;

  .orbit {
    width: 100%;
    padding-top: 100%;
    border-radius: 50%;
    position: relative;
    left: -50%;
    top: -50%;
    z-index: 10;
    background-color: rgba($color, $opacity);
    -webkit-animation-play-state: running;
    animation-play-state: running;
    border: 4px solid transparent;
    -webkit-transform: rotate(50deg);
            transform: rotate(50deg);

    &:hover {
      -webkit-animation-play-state: paused;
      animation-play-state: paused;
      border: 4px solid lighten($color, 1%);
      cursor: pointer;

      .planet:before {
        border: 4px solid lighten($color, 5%);
      }
    }
  }

  .planet {
    display: block;
    width: $planetSize;
    height: $planetSize;
    position: absolute;
    left: -3px;
    top: 50%;
    z-index: 20;
    box-sizing: border-box;

    &:before {
      content: '';
      display: block;
      width: $planetSize;
      height: $planetSize;
      background-color: lighten($color, 1%);
      border-radius: 50%;
      position: absolute;
      border: 4px solid transparent;
      top: -50%;
      left: -50%;
      box-sizing: border-box;
    }
  }

}

@mixin buildStar($size, $order, $color) {
  width: $size;
  height: $size;
  position: absolute;
  left: $order + 26%;
  top: ($order * 3) + 48%;

  .orbit {
    width: 100%;
    padding-top: 100%;
    position: relative;
    left: -50%;
    top: -50%;
  }

  .planet {
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 50%;
    z-index: 20;

    &:before {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      background-color: $color;
      border-radius: 10em;
      position: absolute;
      top: -50%;
      left: 0;
      box-shadow: 0 0 70px 30px rgba(244, 231, 153, 0.77);

      &:hover {
        border: 5px solid lighten($color, 1%);
        cursor: pointer;
      }
    }
  }
}

// 2X images for retina screens
@mixin retina-img($file, $type, $width, $height) {
  background-image: url($file + '.' + $type);
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx){
    & {
      background-image: url($file + '@2x.' + $type);
      -webkit-background-size: $width $height;
      -moz-background-size: $width $height;
      -o-background-size: $width $height;
      background-size: $width $height;
    }
  }
}

// Return px fallback and rem sizing by passing the css property and pixel value
@mixin remCalc($property, $pxWidth) {
  #{$property}: ($pxWidth * 1px);
  #{$property}: emCalc($pxWidth);
}

@function emCalc($pxWidth) {
  @return $pxWidth / $base * 1em;
}

// Linear gradients
@mixin gradient($from, $to) {
  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background: -moz-linear-gradient(top,  $from, $to);
  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

@mixin transform($transform) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

// Clearfix
.group:before,
.group:after {
    content: "";
    display: table;
} 
.group:after {
    clear: both;
}
.group {
    zoom: 1; /* For IE 6/7 (trigger hasLayout) */
}
